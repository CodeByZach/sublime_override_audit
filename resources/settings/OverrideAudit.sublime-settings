// Place your settings in the file "Packages/User/OverrideAudit.sublime-settings",
// which overrides the settings in here.
{
    // Some OverrideAudit commands generate output to a view. When this option
    // is enabled, the command will reuse the view it created the last time it
    // was run (if it is still available) instead of creating a new one each
    // time.
    "reuse_views": true,

    // When "reuse_views" is enabled, this controls if the view that is being
    // reused should be cleared before the new output is generated. When this is
    // turned off, the new content is appended to the view instead.
    "clear_existing": true,

    // A list of packages whose overrides should be ignored when it comes to
    // displaying them.
    "ignore_overrides_in": [],

    // What to do when an override diff indicates that the override is identical
    // to the underlying file. Possible values for this setting are "ignore" to
    // do nothing, "diff" to open a view and indicate that there are no changes
    // or "open" to open the override as a regular file, allowing you to view or
    // modify it.
    //
    // This setting only applies to the Diff Single Override option; when
    // performing a diff via a context menu, OverrideAudit acts as if this
    // is set to "diff".
    "diff_unchanged": "diff",

    // The number of lines of context to show before and after each different
    // in the diff view.
    "diff_context_lines": 3,

    // Normally when a diff is performed and two files compare as equal, the
    // diff result contains only text to tell you this. This option controls
    // whether, in this situation, a diff header should be applied to the result
    // of the diff even when the diff is empty.
    "diff_empty_hdr": false,

    // When set to true, switching from an edit of an override to a diff of it
    // will make sure that any unsaved changes are saved to disk before the
    // diff is created or refreshed.
    //
    // This option will not save a file that no longer exists on disk but still
    // has a buffer open.
    "save_on_diff": false,

    // Should the user be asked to confirm before OverrideAudit deletes any
    // files?
    "confirm_deletion": true,

    // Should the user be asked to confirm before OverrideAudit freshens one or
    // more overrides?
    "confirm_freshen": true,

    // Should the user be asked to confirm before OverrideAudit reverts changes
    // to an override?
    "confirm_revert": true,

    // Control what is considered to be a binary file for the purposes of
    // skipping attempts to calculate diff information. Any override file which
    // matches an item in this list will be considered binary and reported as
    // such in diff views.
    //
    // This setting is purposefully named identically to the Sublime Text
    // setting, which OverrideAudit will automatically use if this setting does
    // not exist here inside the OverrideAudit specific settings.
    //
    // For that reason, the setting is commented out by default.
    // "binary_file_patterns": ["*.png"],

    // When enabled, OverrideAudit will perform a check to see if there are any
    // expired overrides after a package is removed from the ignored_packages
    // setting in Preferences.sublime-settings.
    //
    // This happens when PackageControl works with packages, allowing you to
    // detect if recent package changes might have caused an override to expire.
    //
    // The report will only be displayed if any expired overrides are found.
    "report_on_unignore": true,

    // The tool to use for opening an override diff externally.
    //
    // A value of false disables the external diff functionality (the default).
    //
    // The string "sublimerge" will use Sublimerge Pro or Sublimerge 3 as the
    // external diff tool. This requires that you have Sublimerge installed and
    // enabled; otherwise the value is assumed to be false.
    //
    // The value can also be a dictionary that specifies the command to be used
    // to perform the diff. In this case the "shell_cmd", "working_dir" and
    // "env" keys are used to determine what program to execute and how. These
    // function in the same way as their counterparts in the exec command (build
    // systems) do.
    //
    // The keys "linux", "windows" and "osx" can be optionally specified as
    // dictionaries to alter settings per platform.
    //
    // In addition to all of the standard build variables, this also supports
    // the variables "$override" and "$base" to indicate the file names of the
    // two files respectively.
    "external_diff": false,

    // When generating an Override or Bulk Diff report, OverrideAudit can show
    // you files that exist in the unpacked Packages folder that don't exist in
    // the sublime-package file, which are known as "Unknown Overrides".
    //
    // This setting controls whether those files are displayed at all and, if
    // they are, which should not be displayed due to not being interesting.
    //
    // Possible values:
    //   true to never display any unknown overrides
    //   false to always display every unknown override
    //
    // You may also set this to a list of regular expressions; in this case
    // any unknown overrides that match one of the regular expressions will be
    // hidden but others will remain. Expressions are always matched anchored
    // at the start of the override name.
    //
    // The default value of this setting hides the contents of common VCS
    // systems that may exist in an unpacked package directory that contains
    // overrides.
    "ignore_unknown_overrides": [
        "\\.git/",
        "\\.svn/",
        "\\.hg/"
    ]
}